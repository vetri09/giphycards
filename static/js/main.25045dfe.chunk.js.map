{"version":3,"sources":["components/posts/Posts.jsx","components/share/Share.jsx","App.js","index.js"],"names":["Posts","content","link","className","src","alt","Share","api_key","useState","isAddPost","setIsAddPost","isGifShow","setIsGifShow","posts","setPosts","gifs","setGifs","gifSearch","setGifSearch","setContent","gifLink","setGifLink","cancelAll","useEffect","fetchGIFs","a","axios","then","res","data","catch","err","console","log","onClick","value","onChange","e","target","name","id","cols","rows","placeholder","type","map","idx","images","downsized","url","oldArray","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25045dfe.chunk.js","sourcesContent":["import React from 'react'\r\nimport './posts.css'\r\n\r\nexport default function Posts({ content, link }) {\r\n    return (\r\n        <div className=\"post_container\">\r\n            <img src={link} alt=\"\" />\r\n            <p>{content}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport Posts from '../posts/Posts'\r\nimport axios from 'axios';\r\nimport './share.css'\r\n\r\nexport default function Share() {\r\n    const url = 'https://api.giphy.com/v1/gifs/search?';\r\n    const trending_url = 'http://api.giphy.com/v1/gifs/trending?';\r\n    const api_key = 'api_key=29uoBTfQb5UPANGW114gPP7y9fLyZO0v';\r\n    // let search = `&q=`;\r\n    const [isAddPost, setIsAddPost] = useState(false);\r\n    const [isGifShow, setIsGifShow] = useState(false);\r\n    const [posts, setPosts] = useState([]);\r\n    const [gifs, setGifs] = useState([]);\r\n    // gif search\r\n    const [gifSearch, setGifSearch] = useState('');\r\n    // posts content\r\n    const [content, setContent] = useState('');\r\n    const [gifLink, setGifLink] = useState('');\r\n\r\n    const handle_post = () => {\r\n        if(content !== \"\") {\r\n            setPosts(oldArray => [...oldArray, {content:content,gifLink:gifLink}]);\r\n            cancelAll();\r\n        }\r\n    }\r\n    \r\n    const cancelAll = () => {\r\n        setIsGifShow(false);\r\n        setIsAddPost(false);\r\n        setContent('');\r\n        setGifLink('');\r\n        setGifSearch('');\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchGIFs = async() => {\r\n            if(gifSearch===\"\") {\r\n                await axios(trending_url+api_key)\r\n                .then(res=>{\r\n                    setGifs(res.data.data);\r\n                })\r\n                .catch(err=>console.log(err))\r\n            }\r\n            else {\r\n                // idk how useRef works\r\n                await axios(url+api_key+`&q=${gifSearch}`)\r\n                .then(res=>{\r\n                    setGifs(res.data.data);\r\n                    console.log('done')\r\n                })\r\n                .catch(err=>console.log(err))\r\n            }\r\n        }\r\n        fetchGIFs();\r\n    }, [gifSearch])\r\n\r\n    return (\r\n        <div className=\"share_container\">\r\n            <button\r\n            className={`share_add_btn ${isAddPost ? 'cancel_btn' : 'add_btn' }`}\r\n            onClick={()=>{ isAddPost ? cancelAll()  : setIsAddPost(true) }}>{ isAddPost ? \"Cancel \" : \"Add \" }post</button>\r\n            {\r\n                isAddPost\r\n                ?\r\n                <div className=\"share_box\">\r\n                    <div className=\"share_content\">\r\n                        <textarea value={content} onChange={e=>{setContent(e.target.value)}}\r\n                        name=\"content_text\" id=\"content_text\" className=\"content_text\" cols=\"30\" rows=\"4\" placeholder=\"Add a GIPHY post!\">\r\n                        </textarea>\r\n                        {\r\n                            gifLink !== \"\"\r\n                            ?\r\n                            <img src={gifLink} alt=\"\" className=\"gif_preview\"/>\r\n                            : null\r\n                        }\r\n                        <div className=\"gif_section\">\r\n                            <button className=\"gif_btn\" onClick={()=>{ isGifShow ? setIsGifShow(false) : setIsGifShow(true) }}>GIF</button>\r\n                            {\r\n                                isGifShow\r\n                                ?\r\n                                <div className=\"gif_main\">\r\n                                    <input type=\"text\" className=\"gif_input\" placeholder=\"Search GIF\" value={gifSearch} onChange={e=>{setGifSearch(e.target.value)}} />\r\n                                    {\r\n                                        gifs.map((data,idx)=>(\r\n                                            <img className=\"gif_img\" key={idx} src={data.images.downsized.url} name={data.images.downsized.url}\r\n                                            onClick={e=>{setGifLink(e.target.name);setIsGifShow(false)}}\r\n                                             alt=\"giphy gifs\" />\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                                : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                <button className=\"post_btn\" onClick={()=>{handle_post();setIsAddPost(false)}}>Post</button>\r\n                </div>\r\n                : null\r\n            }\r\n            {/* post component */}\r\n            {\r\n                posts.map((data, idx)=>(\r\n                    <Posts key={idx} content={data.content} link={data.gifLink}/>\r\n            ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import Share from \"./components/share/Share\";\nimport './app.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"app_head\">GIPHY poster card app</h1>\n      <Share />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}